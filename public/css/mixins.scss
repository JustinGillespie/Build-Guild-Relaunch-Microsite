
@mixin border-box {
    -webkit-box-sizing: border-box;
    -moz-box-sizing: border-box;
    -o-box-sizing: border-box;
    box-sizing: border-box;
}


@mixin break-max($size) {
    @media (max-width: $size) { @content; }
}


@mixin clear {
    *zoom: 1;
    &:before, &:after { content: " "; display: table; }
    &:after { clear: both; }
}


@mixin stack($breakpoint) {
    @include break-max($breakpoint) {
        clear: both !important;
        float: none !important;
        width: 100% !important;
    }
}


@mixin input-placeholder-color($color) {
    &::-webkit-input-placeholder { color: $color; }
    &:-moz-placeholder { color: $color; }
    &::-moz-placeholder { color: $color; }
    &:-ms-input-placeholder { color: $color; }
}


@mixin retina($image, $width, $height) {
    @media (min--moz-device-pixel-ratio: 1.3),
    (-o-min-device-pixel-ratio: 2.6/2),
    (-webkit-min-device-pixel-ratio: 1.3),
    (min-device-pixel-ratio: 1.3),
    (min-resolution: 1.3dppx) {

    background-image: url($image);
    background-size: $width $height;
    }
}


@mixin background-clip {
    -webkit-background-clip: padding-box;
    -moz-background-clip: padding;
    background-clip: padding-box;
}


@mixin rounded($radius) {
    @include background-clip;
    -webkit-border-radius: $radius;
    -moz-border-radius: $radius;
    -ms-border-radius: $radius;
    -o-border-radius: $radius;
    border-radius: $radius;
}


@mixin transition($transition) {
  -webkit-transition: $transition;
  -moz-transition: $transition;
  -o-transition: $transition;
  transition: $transition;
}

